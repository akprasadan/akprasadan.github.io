{
  "hash": "8d8b82191b410877b46652cd1e7d7a92",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"First Impressions in Data Science Matter\"\ndescription: \"Modern data science libraries make professional presentation effortless. Let's tackle my biggest pet peeves.\"\nauthor:\n  - name: Akshay Prasadan\n    url: https://akprasadan.github.io/\n    affiliation: PhD in Statistics & Data Science from Carnegie Mellon University\ndate: 5-25-2025\ncategories: [R, ggplot, RMarkdown, Quarto] # self-defined categories\ncitation: \n  url: https://akprasadan.github.io/posts/2025-05-24-data-viz-pet-peeves/ \nappendix-cite-as: display\nimage: gp_blog_final_colored.png\n---\n\n\n\n\n\n# Introduction\n\nI was recently watching a [talk by David Keyes](https://www.youtube.com/watch?v=bp1SMhLoz_M) from the Posit 2024 conference on the design of data science reports. He made a point that increasingly resonates with me: design *matters*. As data scientists, we don't produce graphics, tables, papers, or Beamer presentations just for ourselves. We do so to persuade others. As Keyes' explains, putting effort into design makes people perceive your work as both useful and trustworthy.\n\nIt is unfortunate, therefore, when important work in data science is presented with minimal care. Numbers aren't formatted. Plots barely improve on the defaults. Font sizes are unreadable. Tables look like they were made in Google Docs in 30 seconds. I am definitely guilty of this in my past work. Now I'm trying to persuade fellow academics, journals, private companies, or even the government of the importance of my work. Design matters for this.\n\nThankfully, modern data science tools make it near effortless to level up the professional appearance of your work. Even the defaults have dramatically improved in appearance---compare the default base R scatterplot (@fig-baseR) to a typical `ggplot`. But we can do better.\n\nThis post highlights some simple fixes to level up your design while preserving reproducibility. I'm going to focus on topics that arise when dealing with Quarto or RMarkdown documents and presentations, but the concepts should be universal.\n\n# Reports\n\n## Use Great Tables (`gt`)\n\nWhat makes `ggplot` so useful, in my opinion, is the ease of its grammar. You start with a basic `ggplot`, add on geometries, give those geometries aesthetics, modify the scales of those aesthetics, and then add on the various bells and whistles. \n\nThe [`gt` package](https://gt.rstudio.com/) brought that grammar for tables instead of plots. Instead of the dull, default tables that R spits out like the following:\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\n|energy_type | amount|   percent|\n|:-----------|------:|---------:|\n|Coal        |  10450| 0.3520889|\n|Gas         |   6680| 0.2250674|\n|Hydro       |   4230| 0.1425202|\n|Nuclear     |   2700| 0.0909704|\n|Wind        |   2310| 0.0778302|\n|Solar       |   1660| 0.0559299|\n|Oil         |    870| 0.0293127|\n|Bioenergy   |    690| 0.0232480|\n|Other       |     90| 0.0030323|\n\n\n:::\n:::\n\n\n\n\nwe can now create gorgeous tables full of color, logos, Markdown formatting, with an intuitive language. Rather than wrangling with a `tibble()` until you get the data in the form you want, let `gt` do that work for you.\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"spadfwtspr\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#spadfwtspr table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#spadfwtspr thead, #spadfwtspr tbody, #spadfwtspr tfoot, #spadfwtspr tr, #spadfwtspr td, #spadfwtspr th {\n  border-style: none;\n}\n\n#spadfwtspr p {\n  margin: 0;\n  padding: 0;\n}\n\n#spadfwtspr .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#spadfwtspr .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#spadfwtspr .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#spadfwtspr .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#spadfwtspr .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#spadfwtspr .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#spadfwtspr .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#spadfwtspr .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#spadfwtspr .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#spadfwtspr .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#spadfwtspr .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#spadfwtspr .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#spadfwtspr .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#spadfwtspr .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#spadfwtspr .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#spadfwtspr .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#spadfwtspr .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#spadfwtspr .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#spadfwtspr .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#spadfwtspr .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#spadfwtspr .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#spadfwtspr .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#spadfwtspr .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#spadfwtspr .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#spadfwtspr .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#spadfwtspr .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#spadfwtspr .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#spadfwtspr .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#spadfwtspr .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#spadfwtspr .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#spadfwtspr .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#spadfwtspr .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#spadfwtspr .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#spadfwtspr .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#spadfwtspr .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#spadfwtspr .gt_left {\n  text-align: left;\n}\n\n#spadfwtspr .gt_center {\n  text-align: center;\n}\n\n#spadfwtspr .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#spadfwtspr .gt_font_normal {\n  font-weight: normal;\n}\n\n#spadfwtspr .gt_font_bold {\n  font-weight: bold;\n}\n\n#spadfwtspr .gt_font_italic {\n  font-style: italic;\n}\n\n#spadfwtspr .gt_super {\n  font-size: 65%;\n}\n\n#spadfwtspr .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#spadfwtspr .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#spadfwtspr .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#spadfwtspr .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#spadfwtspr .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#spadfwtspr .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#spadfwtspr .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#spadfwtspr .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#spadfwtspr div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"5\" class=\"gt_heading gt_title gt_font_normal\" style>Global Electricity Production by Source</td>\n    </tr>\n    <tr class=\"gt_heading\">\n      <td colspan=\"5\" class=\"gt_heading gt_subtitle gt_font_normal gt_bottom_border\" style><span data-qmd-base64=\"RGF0YSBzb3VyY2VkIGZyb20gKk91ciBXb3JsZCBpbiBEYXRhKg==\"><span class='gt_from_md'>Data sourced from <em>Our World in Data</em></span></span></td>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Logo\"></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"energy_type\">Energy Source</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"amount\">TWh (2023)</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"percent\">% of Total</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"co2_blank\">CO₂ Intensity</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"Logo\" class=\"gt_row gt_center\">🪨</td>\n<td headers=\"energy_type\" class=\"gt_row gt_left\">Coal</td>\n<td headers=\"amount\" class=\"gt_row gt_right\">10,450</td>\n<td headers=\"percent\" class=\"gt_row gt_right\">35%</td>\n<td headers=\"co2_blank\" class=\"gt_row gt_center\" style=\"background-color: #800000; color: #FFFFFF;\"> </td></tr>\n    <tr><td headers=\"Logo\" class=\"gt_row gt_center\">🧯</td>\n<td headers=\"energy_type\" class=\"gt_row gt_left\">Gas</td>\n<td headers=\"amount\" class=\"gt_row gt_right\">6,680</td>\n<td headers=\"percent\" class=\"gt_row gt_right\">23%</td>\n<td headers=\"co2_blank\" class=\"gt_row gt_center\" style=\"background-color: #F38584; color: #000000;\"> </td></tr>\n    <tr><td headers=\"Logo\" class=\"gt_row gt_center\">💧</td>\n<td headers=\"energy_type\" class=\"gt_row gt_left\">Hydro</td>\n<td headers=\"amount\" class=\"gt_row gt_right\">4,230</td>\n<td headers=\"percent\" class=\"gt_row gt_right\">14%</td>\n<td headers=\"co2_blank\" class=\"gt_row gt_center\" style=\"background-color: #F0EFEF; color: #000000;\"> </td></tr>\n    <tr><td headers=\"Logo\" class=\"gt_row gt_center\">☢️</td>\n<td headers=\"energy_type\" class=\"gt_row gt_left\">Nuclear</td>\n<td headers=\"amount\" class=\"gt_row gt_right\">2,700</td>\n<td headers=\"percent\" class=\"gt_row gt_right\">9%</td>\n<td headers=\"co2_blank\" class=\"gt_row gt_center\" style=\"background-color: #F1EDEC; color: #000000;\"> </td></tr>\n    <tr><td headers=\"Logo\" class=\"gt_row gt_center\">🌬️</td>\n<td headers=\"energy_type\" class=\"gt_row gt_left\">Wind</td>\n<td headers=\"amount\" class=\"gt_row gt_right\">2,310</td>\n<td headers=\"percent\" class=\"gt_row gt_right\">8%</td>\n<td headers=\"co2_blank\" class=\"gt_row gt_center\" style=\"background-color: #F1EDED; color: #000000;\"> </td></tr>\n    <tr><td headers=\"Logo\" class=\"gt_row gt_center\">☀️</td>\n<td headers=\"energy_type\" class=\"gt_row gt_left\">Solar</td>\n<td headers=\"amount\" class=\"gt_row gt_right\">1,660</td>\n<td headers=\"percent\" class=\"gt_row gt_right\">6%</td>\n<td headers=\"co2_blank\" class=\"gt_row gt_center\" style=\"background-color: #F1EBEB; color: #000000;\"> </td></tr>\n    <tr><td headers=\"Logo\" class=\"gt_row gt_center\">🛢️</td>\n<td headers=\"energy_type\" class=\"gt_row gt_left\">Oil</td>\n<td headers=\"amount\" class=\"gt_row gt_right\">870</td>\n<td headers=\"percent\" class=\"gt_row gt_right\">3%</td>\n<td headers=\"co2_blank\" class=\"gt_row gt_center\" style=\"background-color: #9B291F; color: #FFFFFF;\"> </td></tr>\n    <tr><td headers=\"Logo\" class=\"gt_row gt_center\">🪵</td>\n<td headers=\"energy_type\" class=\"gt_row gt_left\">Bioenergy</td>\n<td headers=\"amount\" class=\"gt_row gt_right\">690</td>\n<td headers=\"percent\" class=\"gt_row gt_right\">2%</td>\n<td headers=\"co2_blank\" class=\"gt_row gt_center\" style=\"background-color: #F9BDBB; color: #000000;\"> </td></tr>\n    <tr><td headers=\"Logo\" class=\"gt_row gt_center\">🔶</td>\n<td headers=\"energy_type\" class=\"gt_row gt_left\">Other</td>\n<td headers=\"amount\" class=\"gt_row gt_right\">90</td>\n<td headers=\"percent\" class=\"gt_row gt_right\">0%</td>\n<td headers=\"co2_blank\" class=\"gt_row gt_center\" style=\"background-color: #F0F0F0; color: #000000;\"> </td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n\nIn a nutshell, the syntax is of the following form:\n\n\n\n\n```{.r .cell-code}\ndf |>\n  # optional: group_by before this step\n  gt() |> \n  # modify column attributes\n  cols_*() |> \n  # format columns\n  fmt_*() |> \n  # Labels\n  tab_*() \n  # for niche styling\n  opt_stylize()\n```\n\n\n\nCheck out the various tutorials for the `gt` package on YouTube or the official documentation. Another useful package is `gtsummary` if you wish to quickly generate professional looking descriptive tables for scientific journals.\n\n## Rounding\n\nHard-coding numbers is the enemy of reproducibility. If you use code to compute some quantity, say a predicted temperature, you should not include it in your report by literally writing \"We predict a temperature of 23.4 degrees Celsius.\" What if you find a bug in your code? Then the intended temperature changes but your text does not.\n\nIn RMarkdown or Quarto, we can easily embed numbers using [inline R (or Python) code](https://rmarkdown.rstudio.com/lesson-4.html). Assume you saved the value as a variable, say <code>temp_pred</code>, we simply write <code>&#96;r temp_pred&#96;</code> in the text portion of the document. Unfortunately, if you do this, the knitted report will display an ugly, unrounded decimal, like 23.420484762. Unless you're a physicist at CERN, you probably don't need temperatures this precise. Instead, write <code>&#96;r round(temp_pred, 2)&#96;</code> and show us a level of precision that is reasonable. If you prefer, you can also specify significant digits with `signif`.\n\n## Change up the font\n\nWe're all tired of the default Times New Roman or Computer Modern. There are enormous catalogues out there of different fonts, and you can use them in both PDF or HTML reports. In a PDF document made with Quarto, for example, you can adjust the `mainfont` argument in your [Quarto front matter.](https://quarto.org/docs/authoring/front-matter.html) You may have to install the fonts though, and this could make your documents harder for others to use.\n\nYou can also easily change the fonts of your `ggplot` plots within your document (see below).\n\n\n# `ggplots`\n\n## Use human language, not computer code in your labels\n\nLeaving in $y$-axis labels like \"temp,\" or even worse, \"predicted_temp\" or \"df$predicted_temp\" tells the reader you did the absolute minimum to generate your plot. Anyone who took the time to actually edit the label would  have written it nicely, so the fact you did not tells the reader about your indifference.\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Please forgive me for some base R.](index_files/figure-html/fig-baseR-1.png){#fig-baseR width=672}\n:::\n:::\n\n\n\n\n## Don't overlabel\n\nThe reader does not need their intelligence insulted: \"2004, 2005, ...\" on the x-axis does not warrant a \"Year\" label. In school, students are instructed to label their plots or face point deductions, and I believe this causes an over-reaction where plots are labelled to excess. In a similar vein, avoid redundant information in the title and axes. For example, if your plot title is \"Median Energy Consumption by City in the US\", your $y$-axis does not need to state \"Median Energy Consumption (kWh)\" but something more succinct like \"Consumption (kWh)\" or even just the units (kWh).\n\nInstead take advantage of the opportunity to reduce the amount of text on your plot. Enjoy the minimalism of a blank space instead. Granted, if the application is particularly esoteric, it is better to err on the side of over-labelling.\n\n## Remove the default theme\n\nThe gray background `ggplot` uses gets tiring quickly. The first thing I do when creating any plot is to add `theme_light()` or `theme_bw()`. This immediately cleans up your plot of distracting elements and lets you customize with your own colors. Even better, design your own personal theme and branding.\n\n## Change the colors.\n\nWhen I first learned about `ggplot`, I was amazed at how sleek the default plots look. But we can do better and generate our own palettes! There are some great tools out there, such as [ColorBrewer 2.0](https://colorbrewer2.org/) that can produce color palettes based on the type of data while also accounting for colorblindness or printability.\n\nBut don't just arbitrarily pick some palette and call it a day. Think about the application of your data. Below I used an example of a plot I made for a class on data visualization. The left-side is default colors, and the right was my choice. The colors on the left mean absolutely nothing. Why is beer red and wine blue? Forget aesthetics: readers will struggle to remember what means what as their eyes scan the bars. On the right, the bars evoke a sense that you are really looking at a glass of IPA or red wine. Admittedly, I was unable to think of a compelling color for 'spirits', but blue does remind me of the vivid color of Bombay Sapphire.\n\n:::: {.grid}\n\n::: {.g-col-6 .text-center}\n![*Bland attempt*](drinks_plot_lazy.png){width=100%}\n:::\n\n::: {.g-col-6 .text-center}\n![*Hues that give you a Buzz*](drinks_plot.png){width=100%}\n:::\n\n::::\n\nHowever, it is important to not go overboard with colors. Stick to a palette throughout a report. Indeed, my 'good' example above is rather jarring to look at given this blog's theme.\n\n\n\n## Fonts\n\nI highly recommend switching out the fonts in your title, axis labels, legends, and more. This is easy to do with the `showtext` package. Below I include a code snippet to set the font globally with a font of your choice from [Google Fonts.](https://fonts.google.com/) You can also use different font families for different components of your plot, but I wouldn't recommend it.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(showtext)\n\n# robo is just a user-defined name you can invoke in your plotting functions\nfont_add_google(\"Roboto\", \"robo\")\n\n# To globally use this font\nshowtext_auto()\n```\n:::\n\n\n\n## Use High Resolution Figures\n\nIf you're displaying your `ggplot` figures in a report or presentation, remember that we are going to zoom in and note every little blemish. You're creating a professional document, so don't include images that might as well have been screenshots off your cell-phone.\n\nSave your plots with `ggsave` to the desired size and increase the `dpi` argument to 300 or more. You can also save objects as PDFs or SVG files to avoid the blurriness from zooming in (no `dpi` argument here).\n\nIf you changed the fonts with the `showtext` package, you may have to also specify `showtext_opts(dpi = ...)` so that your fonts are also of high resolution.\n\n# Presentations\n\nMost of the suggestions I have above also apply to reports, but I'll add some unique to presentations.\n\n## Make your Fonts Comically Large\n\nComically. It should make you cringe to look at on your computer. A large chunk of talks I've attended over the years use miniscule font sizes on plot labels, math equations, figure captions, etc. A presentation is not the same thing as a report. The audience can't just zoom in like a PDF or web page. What looks fine on the computer is probably too small on the projector. \n\nI was a teaching assistant one year for a summer program on undergraduate research. Nearly every student made this same font mistake. So prior to their final presentations, I would often walk the students with me to the back of the class and asked them to read their own slides. That got the point across.\n\nSo go overboard, I say. Make the text on everything large enough that it makes you cringe.  You will likely pre-empt some questions from people who missed critical points hidden in ant-sized text but were too polite to interrupt. Unless your goal is to hide that content from the audience, in which case, why even include it?\n\nSimilarly, resist the temptation to reduce font sizes just for the purpose of adding more content. Beamer does a decent job of using default sizes appropriate for presentations, but I prefer larger.\n\n\n## Beamer: Remove the navigation bar\n\nIn a default Beamer presentation made in LaTeX (or Quarto), one can find in the bottom margins a series of navigation buttons.\n\n![Default navigation buttons](navigation_beamer.jpg){width=60%}\n\n\nThese are, in my opinion, distracting, and completely pointless. It's unclear what the second pair of buttons does (and what if the presentation doesn't even have sections?). In your LaTeX or Quarto preamble (in the TeX section) you can just add `\\setbeamertemplate{navigation symbols}{}`.\n\n## Make page sizes large\n\nAudience members like to refer back to page numbers with questions, so help them out by enlarging their size. Make sure the page numbers are the actual 'frames', i.e., the set of slides with the same content (hidden until the transition). Otherwise if you add bullet by bullet points, your slide numbers will be unnecessarily large.\n\n## Transitions should still give audience members time to read\n\nOften times a speaker will include transitions for every bullet point. This is fine, I think, except when the speaker shows the last few points and immediately proceeds to the next slide without giving the audience the time to even read it. It is better to reveal points in batches or at least pause for a moment.\n\n# Conclusion\n\nMy broader point is that design is important, and tools like Quarto, `ggplot`, `gt`, Beamer, and others make it very easy to level up your design skills with minimal work. Yes, there is a bit more boilerplate typing in your code, but that's where defining your own custom themes, templates, or just plainly using copy and paste come in handy. If you are asked to produce a plot, the hard part isn't adding labels, changing up the palette, or rounding numbers: it's probably acquiring and cleaning the data. If you are putting in that work, you might as well add a sprinkling of professionalism with a few lines of code.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}