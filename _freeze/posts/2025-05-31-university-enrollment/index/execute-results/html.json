{
  "hash": "01a69a80ef9088e54fb6c18ab6c3747d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Make your title legendary\"\ndescription: \"The bells and whistles of a dumbbell plot on trends in university enrollment.\"\nauthor:\n  - name: Akshay Prasadan\n    url: https://akprasadan.github.io/\n    affiliation: PhD in Statistics & Data Science from Carnegie Mellon University\ndate: 5-31-2025\ncategories: [R, dplyr, ggplot] # self-defined categories\ncitation: \n  url: https://akprasadan.github.io/posts/2025-05-31-university-enrollment/\nappendix-cite-as: display\nimage: final_education_plot.png\nformat:\n  html: \n    anchor-sections: true\n    toc: true\n    code-fold: true\n    code-tools: true\nknitr:\n  opts_chunk: \n    message: false\n    warning: false\n---\n\n\n\n# Introduction\n\nI was recently browsing the excellent [R Graph Gallery](https://r-graph-gallery.com/) website and came across a gorgeous [dumbbell plot](https://r-graph-gallery.com/web-extended-dumbbell-plot-ggplot2.html) made by Tobias Stalder for TidyTuesday.[^1] A dumbbell plot is a two-sided extension of a lollipop plot, which is in turn a substitute for the familiar but bland bar chart. The bar is replaced with a single line, and a point is added to the end. Tobias Stalder's submission showed the large gap in university enrollment between men and women at Historically Black Colleges and Universities (HBCU). I especially liked his choice of using color in the subtitle rather than having a legend taking up unnecessary space.\n\n[^1]: [TidyTuesday](https://github.com/rfordatascience/tidytuesday) is a weekly community 'event' (and podcast) in which data enthusiasts around the world share their data cleaning, visualizations and modelling techniques for that week's data release.\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Tobias Stalder's TidyTuesday submission](HBCU_trends_gender.png){width=1181}\n:::\n:::\n\n\n\nIn this post, I decided to find broader country-wide trends in university enrollments stratified by sex and make a similar plot. I visited the US government-ran [Digest of Education Statistics](https://nces.ed.gov/programs/digest/current_tables.asp) website ran by *The* *Institute of Education Sciences*. In Chapter 3, under section 303 (Total Fall Enrollment â€” General), I accessed Table 303.10 to see fall enrollment in the US from 1947 to 2023. The data also includes the breakdown of public versus private as well as full-time versus part-time. For now, I decided to just plot the entire time series, so I won't include the summary statistics in my plot that Tobias did (e.g., the mean is itself changing over time, so I'm not sure a global mean is very useful).\n\n# Data Cleaning\n\nI downloaded an `.xlsx` version of Table 303.10. Unfortunately, it comes in a fairly messy format, so we'll need to clean it.\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](excel_screenshot.png){width=785}\n:::\n:::\n\n\n\nWe'll need the `readxl` package. We can discard the first three rows with the `skip` argument of `read_xlsx()` . After that, we'll use one of my favorite functions which is `clean_names()` from the `janitor` package, which converts column names to snake_case. There are some footers in the Excel file which we can remove just by filtering for non-NA rows in the `male` column. We'll also discard row 5 of the original file, which just contains column numbers, by filtering for `year != \"1\"`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(janitor)\n\ntable_filename = 'tabn303.10.xlsx'\n\ndf = read_xlsx(table_filename, skip = 3) |>\n  clean_names() |>\n  select(year, total = total_enrollment, male, female) |>\n  # Removes the footers\n  filter(!is.na(male)) |>\n  # remove unnecessary column number header row\n  filter(year != \"1\")\n```\n:::\n\n\n\nThe next issue is the unnecessary `\"\\1\\\"` or `\"\\r\\n\"` strings that appear in the `year` column. We'll use `str_replace()` from the `stringr` package to remove that. Then `year` needs to converted to numeric once those non-numeric characters are removed. While we are using `mutate()`, I'll create a proportion male and proportional female column. Then I'll select `year` and the two proportion columns, since we no longer need the full counts.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf = df |>\n  mutate(\n    year = str_replace(year, '\\\\\\\\1\\\\\\\\', \"\"),\n    year = str_replace(year, \"\\\\r\\\\n\", \"\"),\n    year = as.numeric(year),\n    prop_male = male / total,\n    prop_female = female / total\n  ) |>\n  select(year, starts_with('prop'))\n```\n:::\n\n\n\nI plan to only plot every other year for a simpler graphic. There change is relatively gradual so showing year to year changes doesn't really matter much. My data goes from 1947 to 2023, so using the odd years is sufficient. Also, we will later see that the trend is declining for males and rising for females, with a crossing point in 1979. I'd like to indicate this with a straight line at that point. I don't want to hard-code it, so I'll save this information as a one row tibble at this year called `final_male_df`. I'll do this calculation *before* I filter for odd years only, importantly.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfinal_male_df = df |>\n  filter(prop_male > prop_female) |>\n  slice_max(order_by = year)\n\ndf = df |> filter(year %in% seq(1947, 2023, by = 2))\n```\n:::\n\n\n\nThe last piece of data wrangling we need is reshaping `df` into a long format. We want a single $y$-axis column, say `enrollment_pct`, so we'll pivot the `prop_male` and `prop_female` into a `sex` and `enrollment_pct` pair of columns. The `\"prop_\"` will then become unnecessary, so we'll remove it with `names_prefix = \"prop_\"` .\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlong_df = df |>\n  pivot_longer(\n    cols = c(prop_male, prop_female),\n    names_to = \"sex\",\n    names_prefix = \"prop_\",\n    values_to = \"enrollment_pct\"\n  )\n```\n:::\n\n\n\n# Plotting\n\n## Our basic Geometries\n\nWe will start by adding points with `year` on the $x$ axis and `enrollment_pct` on the $y$ axis colored by `sex`. Then we add a segment from the male to female values using `geom_segment()`. To do so, we actually feed in the *wide* dataset `df` because it takes in a `y` and `yend` aesthetic for which we will specify `prop_male` and `prop_female`, respectively. The long version of the dataset no longer has these columns. However, the `df` dataframe does not have a `sex` column, so we don't want to feed in the previous aesthetics. Thus, we must include an `inherit.aes = F` argument to `geom_segment()`.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlong_df |>\n  ggplot(aes(x = year, y = enrollment_pct, color = sex)) +\n  geom_point() +\n  geom_segment(\n    data = df,\n    aes(x = year, y = prop_male, yend = prop_female),\n    inherit.aes = F\n  ) \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\nThe next step is to add the vertical line for the transition point where more females than males enroll. We will feed in a new dataset again, the `final_male_df` row we saved. I want the line to occur on the first year in which female enrollment is higher, so I add one to the year. Once again, we'll need to not inherit the aesthetics. The reason I used `geom_segment()` instead of `geom_vline()` is that I wanted finer control over where the line starts and ends.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlong_df |>\n  ggplot(aes(x = year, y = enrollment_pct, color = sex)) +\n  geom_point() +\n  geom_segment(\n    data = df,\n    aes(x = year, y = prop_male, yend = prop_female),\n    inherit.aes = F\n  ) +\n  geom_segment(\n    data = final_male_df,\n    aes(x = year + 1),\n    y = 0.25,\n    yend = 0.7,\n    inherit.aes = F\n  ) \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\nThe last `geom_*()` I wish to add is `geom_image()`. The plot is fairly bare, so I wanted a transparent graphic representing education sitting in the bottom right. We'll have to load in the `ggimage` package. To add transparency, we [follow the technique here](https://stackoverflow.com/questions/60820565/is-there-a-way-to-add-an-alpha-value-within-geom-image-in-ggplot) and define a transparency function to pass into `geom_image()`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggimage)\n\ntransparent <- function(img) {\n  magick::image_fx(img, expression = \"0.5*a\", channel = \"alpha\")\n}\n\nlong_df |>\n  ggplot(aes(x = year, y = enrollment_pct, color = sex)) +\n  geom_point() +\n  geom_segment(\n    data = df,\n    aes(x = year, y = prop_male, yend = prop_female),\n    inherit.aes = F\n  ) +\n  geom_segment(\n    data = final_male_df,\n    aes(x = year + 1),\n    y = 0.25,\n    yend = 0.7,\n    inherit.aes = F\n  ) +\n  geom_image(\n    data = tibble(year = 1998, enrollment_pct = 0.32),\n    aes(x = year, y = enrollment_pct, \n        image = 'generic_students.png'),\n    image_fun = transparent,\n    size = 0.3,\n    inherit.aes = F\n  ) \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\nI'll add in some styling to these geoms.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlong_df |>\n  ggplot(aes(x = year, y = enrollment_pct, color = sex)) +\n  geom_point(size = 2.1) +\n  geom_segment(\n    data = df,\n    aes(x = year, y = prop_male, yend = prop_female),\n    inherit.aes = F,\n    alpha = 0.3,\n    linewidth = 2.2,\n    color = '#d95f02'\n  ) +\n  geom_segment(\n    data = final_male_df,\n    aes(x = year + 1),\n    y = 0.25,\n    yend = 0.7,\n    color = '#d95f02',\n    linewidth = 1,\n    alpha = 0.5,\n    linetype = 'dotdash',\n    inherit.aes = F\n  ) +\n  geom_image(\n    data = tibble(year = 1998, enrollment_pct = 0.32),\n    aes(x = year, y = enrollment_pct, image = 'generic_students.png'),\n    image_fun = transparent,\n    size = 0.3,\n    inherit.aes = F\n  ) \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n## Colors and Scales\n\nAfter consulting [Color Brewer 2.0](https://colorbrewer2.org), I settled on using [#7570b3]{style=\"background-color: #7570b3; color: white\"} for male and [#1b9e77]{style=\"background-color: #1b9e77; color: white\"} for female. For the bars, I used a transparent version of[#d95f02]{style=\"background-color: #d95f02; color: black\"}. Let's create a manual color scale to use these instead. We will remove the legend by specifying `guide = 'none'`. \n\nAlong the way, we can specify the breaks for the $x$ and $y$ axes, and use `percent_format()` from the `scales` package to get nice percent signs. \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlong_df |> \n  ggplot(aes(x = year, y = enrollment_pct, color = sex)) +\n  geom_point(size = 2.1) +\n  geom_segment(data = df,\n               aes(x = year, y = prop_male, yend = prop_female),\n               inherit.aes = F,\n               alpha = 0.3,\n               linewidth = 2.2,\n               color = '#d95f02') +\n  geom_segment(data = final_male_df, \n               aes(x = year + 1), y = 0.25, yend = 0.7,\n               color = '#d95f02', linewidth = 1, alpha = 0.5,\n               linetype = 'dotdash',\n               inherit.aes = F) +\n  geom_image(data = tibble(year = 1998, enrollment_pct = 0.32),\n             aes(x =year, \n                 y = enrollment_pct, \n                 image = 'generic_students.png'),\n             image_fun = transparent,\n             size = 0.3,\n             inherit.aes = F) +\n  scale_y_continuous(labels = scales::percent_format(),\n                     limits = c(0.25, 0.73),\n                     expand = c(0,0)) +\n  scale_x_continuous(breaks = seq(1950, 2025, by = 10),\n                     limits =c(1945, 2024),\n                     expand = c(0,0)) +\n  scale_color_manual(breaks = c(\"male\", \"female\"),\n                     values = c(\"#7570b3\", '#1b9e77'),\n                                guide = 'none') \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\nLooks good. Let's fix up the labels. Importantly, I want to put the legend in the title itself. To do that, we use the `ggtext` package and add the HTML tags in the title. To render it properly, we must call `plot.title = element_markdown()` inside the `theme()` function. The HTML format is messy, but goes like this: `<span style = 'color:{your-color};'>{your-text}</span>`. \n\nThe same `ggtext` package lets me add line breaks to the caption as well, using `<br>`. We'll reposition the caption using the `plot.caption` and `plot.caption.position` arguments.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggtext)\n\nlong_df |> \n  ggplot(aes(x = year, y = enrollment_pct, color = sex)) +\n  geom_point(size = 2.1) +\n  geom_segment(data = df,\n               aes(x = year, y = prop_male, yend = prop_female),\n               inherit.aes = F,\n               alpha = 0.3,\n               linewidth = 2.2,\n               color = '#d95f02') +\n  geom_segment(data = final_male_df, \n               aes(x = year + 1), y = 0.25, yend = 0.7,\n               color = '#d95f02', linewidth = 1, alpha = 0.5,\n               linetype = 'dotdash',\n               inherit.aes = F) +\n  geom_image(data = tibble(year = 1998, enrollment_pct = 0.32),\n             aes(x =year, \n                 y = enrollment_pct, \n                 image = 'generic_students.png'),\n             image_fun = transparent,\n             size = 0.3,\n             inherit.aes = F) +\n  scale_y_continuous(labels = scales::percent_format(),\n                     limits = c(0.25, 0.73),\n                     expand = c(0,0)) +\n  scale_x_continuous(breaks = seq(1950, 2025, by = 10),\n                     limits =c(1945, 2024),\n                     expand = c(0,0)) +\n  scale_color_manual(breaks = c(\"male\", \"female\"),\n                     values = c(\"#7570b3\", '#1b9e77'),\n                     guide = 'none') +\n  labs(x = \"\",\n       y = \"\",\n       title = \"<span style = 'color:#7570b3;'>**Male**</span> and <span style = 'color:#1b9e77;'>**Female**</span> University Enrollment has swapped places.\",\n       subtitle = \"Proportion of Fall Enrollment between 1947 and 2023 (odd years only)\",\n       caption = \"Data sourced from *The Institute of Education Sciences*.<br><br>Plot by Akshay Prasadan.\") +\n  theme(plot.title = element_markdown(),\n        plot.caption.position = 'plot',\n        plot.caption = element_markdown(hjust = 0))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\nThe default theme looks ugly to me. Let's remove the grey background, customize which panel gridlines we want, and make other minor changes. The easiest way to do this is to add `theme_minimal()` and then put back what is of interest.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlong_df |>\n  ggplot(aes(x = year, y = enrollment_pct, color = sex)) +\n  geom_point(size = 2.1) +\n  geom_segment(\n    data = df,\n    aes(x = year, y = prop_male, yend = prop_female),\n    inherit.aes = F,\n    alpha = 0.3,\n    linewidth = 2.2,\n    color = '#d95f02'\n  )+\n  geom_segment(\n    data = final_male_df,\n    aes(x = year + 1),\n    y = 0.25,\n    yend = 0.7,\n    color = '#d95f02',\n    linewidth = 1,\n    alpha = 0.5,\n    linetype = 'dotdash',\n    inherit.aes = F\n  ) +\n  geom_image(\n    data = tibble(year = 1998, enrollment_pct = 0.32),\n    aes(x = year, y = enrollment_pct, image = 'generic_students.png'),\n    image_fun = transparent,\n    size = 0.3,\n    inherit.aes = F\n  ) +\n  scale_y_continuous(\n    labels = scales::percent_format(),\n    limits = c(0.25, 0.73),\n    expand = c(0, 0)\n  ) +\n  scale_x_continuous(\n    breaks = seq(1950, 2025, by = 10),\n    limits = c(1945, 2024),\n    expand = c(0, 0)\n  ) +\n  scale_color_manual(\n    breaks = c(\"male\", \"female\"),\n    values = c(\"#7570b3\", '#1b9e77'),\n    guide = 'none'\n  ) +\n  labs(\n    x = \"\",\n    y = \"\",\n    title = \"<span style = 'color:#7570b3;'>**Male**</span> and <span style = 'color:#1b9e77;'>**Female**</span> University Enrollment has swapped places.\",\n    subtitle = \"Proportion of Fall Enrollment between 1947 and 2023 (odd years only)\",\n    caption = \"Data sourced from *The Institute of Education Sciences*.<br><br>Plot by Akshay Prasadan.\"\n  ) +\n  theme_minimal() +\n  theme(\n    panel.grid = element_blank(),\n    panel.grid.major.y = element_line(color = 'grey90', linetype = 'dotted'),\n    axis.ticks.x.bottom = element_line(color = 'black'),\n    axis.ticks.length.x.bottom = unit(4, units = 'pt'),\n    axis.text.x.bottom = element_text(color = 'black'),\n    axis.text.y.left = element_text(color = 'black'),\n    plot.title = element_markdown(),\n    plot.caption.position = 'plot',\n    plot.caption = element_markdown(hjust = 0)\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\n## Fonts\n\nFor our final customization, let's change the font to \"Lato\" from Google Fonts using the `showtext` package. We'll need to set the global size using `text = element_text(family = 'Lato', size = 5)`, since often times the default sizes will be way too big or small. For some weird reason, text that gets modified by `element_markdown()` sometimes loses their spaces, so to fix that, I added `family = \"\"` in the `plot.caption= element_markdown()` argument.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(showtext)\n\nfont_add_google(\"Lato\")\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\nlong_df |>\n  ggplot(aes(x = year, y = enrollment_pct, color = sex)) +\n  geom_point(size = 2.1) +\n  geom_segment(\n    data = df,\n    aes(x = year, y = prop_male, yend = prop_female),\n    inherit.aes = F,\n    alpha = 0.3,\n    linewidth = 2.2,\n    color = '#d95f02'\n  ) +\n  geom_segment(\n    data = final_male_df,\n    aes(x = year + 1),\n    y = 0.25,\n    yend = 0.7,\n    color = '#d95f02',\n    linewidth = 1,\n    alpha = 0.5,\n    linetype = 'dotdash',\n    inherit.aes = F\n  ) +\n  geom_image(\n    data = tibble(year = 1998, enrollment_pct = 0.32),\n    aes(x = year, y = enrollment_pct, image = 'generic_students.png'),\n    image_fun = transparent,\n    size = 0.3,\n    inherit.aes = F\n  ) +\n  scale_y_continuous(\n    labels = scales::percent_format(),\n    limits = c(0.25, 0.73),\n    expand = c(0, 0)\n  ) +\n  scale_x_continuous(\n    breaks = seq(1950, 2025, by = 10),\n    limits = c(1945, 2024),\n    expand = c(0, 0)\n  ) +\n  scale_color_manual(\n    breaks = c(\"male\", \"female\"),\n    values = c(\"#7570b3\", '#1b9e77'),\n    guide = 'none'\n  ) +\n  labs(\n    x = \"\",\n    y = \"\",\n    title = \"<span style = 'color:#7570b3;'>**Male**</span> and <span style = 'color:#1b9e77;'>**Female**</span> University Enrollment has swapped places.\",\n    subtitle = \"Proportion of Fall Enrollment between 1947 and 2023 (odd years only)\",\n    caption = \"Data sourced from *The Institute of Education Sciences*.<br><br>Plot by Akshay Prasadan.\"\n  ) +\n  theme_minimal() +\n  theme(\n    text = element_text(family = 'Lato', size = 7),\n    panel.grid = element_blank(),\n    panel.grid.major.y = element_line(color = 'grey90', linetype = 'dotted'),\n    axis.ticks.x.bottom = element_line(color = 'black'),\n    axis.ticks.length.x.bottom = unit(4, units = 'pt'),\n    axis.text.x.bottom = element_text(color = 'black'),\n    axis.text.y.left = element_text(color = 'black'),\n    plot.title = element_markdown(),\n    plot.caption.position = 'plot',\n    plot.caption = element_markdown(hjust = 0, family = \"\")\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\n# All Together\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(ggtext)\nlibrary(ggimage)\nlibrary(showtext)\nlibrary(janitor)\n\nfont_add_google(\"Lato\")\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\ntransparent <- function(img) {\n  magick::image_fx(img, expression = \"0.5*a\", channel = \"alpha\")\n}\n\ndf = read_xlsx('tabn303.10.xlsx', skip = 3) |>\n  janitor::clean_names() |>\n  select(\n    year,\n    total = total_enrollment,\n    male,\n    female,\n    full_time,\n    part_time = part_time_4,\n    public,\n    private = total\n  ) |>\n  # Removes the footers\n  filter(!is.na(male)) |>\n  # remove unnecessary column number header row\n  filter(year != \"1\") |>\n  # Need to clean up some strings before we convert to numeric\n  mutate(\n    # \"---\" = not available according to footnote\n    full_time = str_replace(full_time, \"---\", NA_character_),\n    part_time = str_replace(full_time, \"---\", NA_character_),\n    # remove all the '\\\\1\\\\'  or '\\r\\n' strings.\n    # We have to do some escaping of the backlashes though.\n    year = str_replace(year, '\\\\\\\\1\\\\\\\\', \"\"),\n    year = str_replace(year, \"\\\\r\\\\n\", \"\")\n    # No other string oddities in year remain\n  ) |>\n  # Convert all columns to numeric\n  mutate(across(everything(), as.numeric)) |>\n  mutate(\n    prop_male = male / total,\n    prop_female = female / total,\n    prop_public = public / total,\n    prop_private = private / total\n  ) |>\n  select(year, starts_with('prop'))\n\n# Final year where male enrollment exceeded female enrollment\nfinal_male_df = df |>\n  filter(prop_male > prop_female) |>\n  slice_max(order_by = year)\n\ndf = df |>\n  filter(year %in% seq(2023, 1947, by = -2))\n\nlong_df = df |>\n  pivot_longer(\n    cols = c(prop_male, prop_female),\n    names_to = \"sex\",\n    names_prefix = \"prop_\",\n    values_to = \"enrollment_pct\"\n  )\n\nplot = long_df |>\n  ggplot(aes(x = year, y = enrollment_pct, color = sex)) +\n  geom_point(size = 2.1) +\n  geom_segment(\n    data = df,\n    aes(x = year, y = prop_male, yend = prop_female),\n    inherit.aes = F,\n    alpha = 0.3,\n    linewidth = 2.2,\n    color = '#d95f02'\n  ) +\n  geom_segment(\n    data = final_male_df,\n    aes(x = year + 1),\n    y = 0.25,\n    yend = 0.7,\n    color = '#d95f02',\n    linewidth = 1,\n    alpha = 0.5,\n    linetype = 'dotdash',\n    inherit.aes = F\n  ) +\n  geom_image(\n    data = tibble(year = 1998, enrollment_pct = 0.32),\n    aes(x = year, y = enrollment_pct, image = 'generic_students.png'),\n    image_fun = transparent,\n    size = 0.3,\n    inherit.aes = F\n  ) +\n  scale_y_continuous(\n    labels = scales::percent_format(),\n    limits = c(0.25, 0.73),\n    expand = c(0, 0)\n  ) +\n  scale_x_continuous(\n    breaks = seq(1950, 2025, by = 10),\n    limits = c(1945, 2024),\n    expand = c(0, 0)\n  ) +\n  scale_color_manual(\n    breaks = c(\"male\", \"female\"),\n    values = c(\"#7570b3\", '#1b9e77'),\n    guide = 'none'\n  ) +\n  labs(\n    x = \"\",\n    y = \"\",\n    title = \"<span style = 'color:#7570b3;'>**Male**</span> and <span style = 'color:#1b9e77;'>**Female**</span> University Enrollment has swapped places.\",\n    subtitle = \"Proportion of Fall Enrollment between 1947 and 2023 (odd years only)\",\n    caption = \"Data sourced from *The Institute of Education Sciences*.<br><br>Plot by Akshay Prasadan.\"\n  ) +\n  theme_minimal() +\n  theme(\n    text = element_text(family = 'Lato', size = 9),\n    panel.grid = element_blank(),\n    panel.grid.major.y = element_line(color = 'grey90', linetype = 'dotted'),\n    axis.ticks.x.bottom = element_line(color = 'black'),\n    axis.ticks.length.x.bottom = unit(4, units = 'pt'),\n    axis.text.x.bottom = element_text(color = 'black'),\n    axis.text.y.left = element_text(color = 'black'),\n    plot.title = element_markdown(),\n    plot.caption.position = 'plot',\n    plot.caption = element_markdown(hjust = 0, family = \"\")\n  )\n\nggsave(\n  filename = \"final_education_plot.png\",\n  dpi = 300,\n  height = 5,\n  width = 8,\n  bg = \"white\"\n)\n```\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}